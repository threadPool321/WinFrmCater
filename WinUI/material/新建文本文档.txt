分层的好处：分工明确，更强的代码的可重用性；
工厂方式，就是不允许直接创建对象，而是通过我给你制定的方法进行创建对象
DataGridView
单元格格式化事件gvList_CellFormatting
取消自动添加列属性：gvList.AutoGenerateColumns = false;  //取消自动生成列


gvList.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
selectionModel=FullRowSelected属性表示选中一个单元格就能选中一行
单元格不能够多选
MultiSelect=false;

dataGridview 显示数据库为null值该怎么显示

Out ref
作为参数返回值的时候，为什么用out,ref?
使用out,ref的目的就是为了，有值可以从方法体中给我们返回回来（out ref 修饰的参数表示可以从方法体中给我们返回回来，但是前提是out们修饰的变量都是值类型的），out ref值类型的变量要用到地址


tabControl tabPage  listView listViewItem

//tabcontrol，移除选项卡手动添加标签
        private void tabControl1_SelectedIndexChanged(object sender, EventArgs e)
        {
            //操作过程:选择一个tabPage,然后根据当前选中的TabPage存储的厅包编号,查找里面的餐桌,然后创建ListView,加入所有的餐桌,
            //再将ListView加到当前选中的TagPage
            //1\获取选中的tabPage
            var tabPage = tabHill.SelectedTab;
            //查出所有餐桌的信息
            Bll.TableInfoBll bll = new Bll.TableInfoBll();
            Model.TableInfo table = new Model.TableInfo();
            table.THallId = Convert.ToInt32(tabHill.SelectedTab.Tag);   //厅包的条件
            table.TIsFree = -1;                                         //得到是否空闲-1表示全部
            var list = bll.GetTableInfos(table);


            //把这个集合放到listview中
            //构建listView
            ListView listView = new ListView();
            listView.LargeImageList = imageList1;
            listView.Dock = DockStyle.Fill;
            listView.MultiSelect = false; //不能进行多选
            foreach (var item in list)
            {
                ListViewItem lItem = new ListViewItem(item.TTitle, item.TIsFree);
                listView.Items.Add(lItem);
            }
           
            //4\将ListView加入当前选中的TabPage
            tabPage.Controls.Add(listView);
        }


5.2在mianfrom中加载完毕厅包中的table后开始，双击table可以进行点菜功能

我们在给一个容器里包含很多像添加事件是加不上去的，所以我们必须是要给这个很多项的夫容器（父级容器）添加事件
业务处理，如果当前的餐桌是属于空闲状态，那么就进行开单操作，进行两步操作，一个给orderInfo新增一条数据，数据有选择性的，一个是给餐桌表修改是否空闲的状态

定义类，如果类中含有string int 那么我们直接给这个类的对象为null,那么string默认是null,int默认是0

完成订单中的筛选查询功能 1.拼音筛选，2.菜品类型筛选

完成在菜品中我们双击进行点菜（首先实现双击菜品  然后点菜栏中就会有刚才点的菜（实现）【当完成点菜功能后，要及时进行刷新功能就是重新绑定】）

修改数量使用一个事件：dgvOrderDetail_CellEndEdit  单元格修改后回车事件
双击菜单点菜：重复点击订单详细中数量增加，价格的变化

下单操作：点击下单后把，我们的中价格进行更新到订单中，以便结账使用


调用结账窗口进行结账：当然结账的时候一定要选中其中的某一个项，这样才有意义，如果选中的餐桌是个空闲的那么结账也是没有意义的 ，所以重要的hi
要记录下是哪一个餐桌被选中，或者通过点击的时候去找哪一个呗选中比较费劲（先找到tabControl，=>找到tab）
通过定义全局的变量，记录是哪一个餐桌要进行结账

问题：图片怎么跟状态联系到一起的(listViewItem对象创建时，制定图片)，双击后开单不能再继续开单了（在进行创建更改这个桌子的状态）=》修改餐桌中的状态设置
占用状态（当然显示的时候是根据状态显示不同的图标的）

Convert.ToInt32（""）出现字符报错，null值转换为0

结账时候，我们得到的是一个餐桌编号

所有的点餐的逻辑：
1、显示厅包及餐桌
-》在主窗口中，使用标签显示厅包，在每个标签中使用listview显示餐桌
	餐桌分为使用、空闲状态
-》双击餐桌，如果是空闲，则开单，如果是使用，则继续点菜

2、点菜
-》可以使用拼音、分类检索
-》完成点菜
	点击菜品则添加
	再次点击菜品则让数量+1
	可以在文本框中修改数量
-》追加消费
-》显示已点菜品
-》计算金额
-》退菜
-》sqlite中获取当前时间：datetime('now', 'localtime')

3、结账
-》创建UI
-》选择是否会员，可以根据编号、电话查询会员，可以使用会员余额结账
-》显示消费金额
-》根据会员信息享受打折，显示折扣金额
-》实现的操作：更新订单信息，更新餐桌信息，如果使用余额结账则更新会员余额
-》事务的使用：
	打开连接
	通过连接对象开启事务
	将事务对象指定给Command对象
	在正常下提交事务
	在异常下回滚事务

-》开单点菜
1、双击一个空闲的桌子，则开单，打开点菜窗体
	如果是一个非空闲的桌子，则直接打开点菜窗体
2、在点菜窗体中，可以显示所有的菜品信息，并能够根据首字母、分类进行查询
3、点菜：双击某个菜品，则完成点菜
	向订单详表中插入数据
	如果该菜品的数据已经存在，则让数量+1
4、修改菜品数量
5、计算总金额，并下单
	遍历菜品详单，逐行计算总金额
	将总金额更新到订单表
-》结账
1、选择一个餐桌
	如果餐桌被占用，则结账
	如果餐桌空闲，则提示
2、打开结账窗口，查询金额
3、完成会员信息的查找
	查找到折扣后，计算应收金额
4、结账
《1》更新订单的数据：支付状态，会员编号，折扣率
《2》更新餐桌的数据：餐桌空闲状态
《3》更新会员的数据：如果使用余额结账，则更新余额
《4》更新UI中餐桌的图片


-》事务的使用规则
1、创建连接对象
2、由连接对象创建事务对象
3、将事务对象赋给命令对象
4、执行命令
5、如果异常则回滚，如果正常则提交